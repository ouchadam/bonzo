buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.novoda:gradle-build-properties-plugin:0.4.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext.metaDirectory = file("${rootProject.projectDir}/meta")

ext.applyKotlinDependencies = { dependencies ->
    dependencies.implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

ext.applyCommonDependencies = { dependencies ->
    dependencies.implementation project(':common')
}

ext.applyModules = { dependencies ->
    dependencies.implementation project(':modules')
}

ext.applyCommonAndroidDependencies = { dependencies ->
    dependencies.implementation project(':common-android')
}

ext.applyTestDependencies = { dependencies ->
    dependencies.testImplementation 'junit:junit:4.12'
}

ext.applyAndroidTestDependencies = { dependencies ->
    dependencies.androidTestImplementation 'com.android.support.test:runner:1.0.2'
    dependencies.androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

ext.applyAndroid = { project ->
    project.android {
        compileSdkVersion 28

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 28
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            def navigationUri = 'github.ouchada.bonzo'
            resValue "string", "navigation_uri", navigationUri
            manifestPlaceholders = [
                    navigation_uri: navigationUri
            ]
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), rootProject.file('proguard-rules.pro')
            }
        }
    }

    project.androidExtensions {
        experimental = true
    }
}
